{"version":3,"file":"863.js","mappings":"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","sources":["./node_modules/@fullcalendar/timegrid/index.js","./node_modules/@fullcalendar/timegrid/internal.js"],"sourcesContent":["import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DayTimeColsView } from './internal.js';\nimport '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\nimport '@fullcalendar/daygrid/internal.js';\n\nconst OPTION_REFINERS = {\n    allDaySlot: Boolean,\n};\n\nvar index = createPlugin({\n    name: '@fullcalendar/timegrid',\n    initialView: 'timeGridWeek',\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        timeGrid: {\n            component: DayTimeColsView,\n            usesMinMaxTime: true,\n            allDaySlot: true,\n            slotDuration: '00:30:00',\n            slotEventOverlap: true, // a bad name. confused with overlap/constraint system\n        },\n        timeGridDay: {\n            type: 'timeGrid',\n            duration: { days: 1 },\n        },\n        timeGridWeek: {\n            type: 'timeGrid',\n            duration: { weeks: 1 },\n        },\n    },\n});\n\nexport { index as default };\n","import { Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\n\nclass AllDaySplitter extends Splitter {\n    getKeyInfo() {\n        return {\n            allDay: {},\n            timed: {},\n        };\n    }\n    getKeysForDateSpan(dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        return ['timed'];\n    }\n    getKeysForEventDef(eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        return ['allDay'];\n    }\n}\n\nconst DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'short',\n});\nfunction TimeColsAxisCell(props) {\n    let classNames = [\n        'fc-timegrid-slot',\n        'fc-timegrid-slot-label',\n        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n    ];\n    return (createElement(ViewContextType.Consumer, null, (context) => {\n        if (!props.isLabeled) {\n            return (createElement(\"td\", { className: classNames.join(' '), \"data-time\": props.isoTimeStr }));\n        }\n        let { dateEnv, options, viewApi } = context;\n        let labelFormat = // TODO: fully pre-parse\n         options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n                createFormatter(options.slotLabelFormat);\n        let renderProps = {\n            level: 0,\n            time: props.time,\n            date: dateEnv.toDate(props.date),\n            view: viewApi,\n            text: dateEnv.format(props.date, labelFormat),\n        };\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: classNames, elAttrs: {\n                'data-time': props.isoTimeStr,\n            }, renderProps: renderProps, generatorName: \"slotLabelContent\", customGenerator: options.slotLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.slotLabelClassNames, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\" },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-timegrid-slot-label-cushion',\n                    'fc-scrollgrid-shrink-cushion',\n                ] })))));\n    }));\n}\nfunction renderInnerContent(props) {\n    return props.text;\n}\n\nclass TimeBodyAxis extends BaseComponent {\n    render() {\n        return this.props.slatMetas.map((slatMeta) => (createElement(\"tr\", { key: slatMeta.key },\n            createElement(TimeColsAxisCell, Object.assign({}, slatMeta)))));\n    }\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });\nconst AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nclass TimeColsView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n        this.headerElRef = createRef();\n        this.rootElRef = createRef();\n        this.scrollerElRef = createRef();\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleScrollTopRequest = (scrollTop) => {\n            let scrollerEl = this.scrollerElRef.current;\n            if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n                scrollerEl.scrollTop = scrollTop;\n            }\n        };\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        this.renderHeadAxis = (rowKey, frameHeight = '') => {\n            let { options } = this.context;\n            let { dateProfile } = this.props;\n            let range = dateProfile.renderRange;\n            let dayCnt = diffDays(range.start, range.end);\n            // only do in day views (to avoid doing in week views that dont need it)\n            let navLinkAttrs = (dayCnt === 1)\n                ? buildNavLinkAttrs(this.context, range.start, 'week')\n                : {};\n            if (options.weekNumbers && rowKey === 'day') {\n                return (createElement(WeekNumberContainer, { elTag: \"th\", elClasses: [\n                        'fc-timegrid-axis',\n                        'fc-scrollgrid-shrink',\n                    ], elAttrs: {\n                        'aria-hidden': true,\n                    }, date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, (InnerContent) => (createElement(\"div\", { className: [\n                        'fc-timegrid-axis-frame',\n                        'fc-scrollgrid-shrink-frame',\n                        'fc-timegrid-axis-frame-liquid',\n                    ].join(' '), style: { height: frameHeight } },\n                    createElement(InnerContent, { elTag: \"a\", elClasses: [\n                            'fc-timegrid-axis-cushion',\n                            'fc-scrollgrid-shrink-cushion',\n                            'fc-scrollgrid-sync-inner',\n                        ], elAttrs: navLinkAttrs })))));\n            }\n            return (createElement(\"th\", { \"aria-hidden\": true, className: \"fc-timegrid-axis\" },\n                createElement(\"div\", { className: \"fc-timegrid-axis-frame\", style: { height: frameHeight } })));\n        };\n        /* Table Component Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n        // but DayGrid still needs to have classNames on inner elements in order to measure.\n        this.renderTableRowAxis = (rowHeight) => {\n            let { options, viewApi } = this.context;\n            let renderProps = {\n                text: options.allDayText,\n                view: viewApi,\n            };\n            return (\n            // TODO: make reusable hook. used in list view too\n            createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                    'fc-timegrid-axis',\n                    'fc-scrollgrid-shrink',\n                ], elAttrs: {\n                    'aria-hidden': true,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, (InnerContent) => (createElement(\"div\", { className: [\n                    'fc-timegrid-axis-frame',\n                    'fc-scrollgrid-shrink-frame',\n                    rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : '',\n                ].join(' '), style: { height: rowHeight } },\n                createElement(InnerContent, { elTag: \"span\", elClasses: [\n                        'fc-timegrid-axis-cushion',\n                        'fc-scrollgrid-shrink-cushion',\n                        'fc-scrollgrid-sync-inner',\n                    ] })))));\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n        };\n    }\n    // rendering\n    // ----------------------------------------------------------------------------------------------------\n    renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n        let { context, props } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                chunk: { content: allDayContent },\n            });\n            sections.push({\n                type: 'body',\n                key: 'all-day-divider',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunk: {\n                scrollerElRef: this.scrollerElRef,\n                content: timeContent,\n            },\n        });\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { context, props } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (arg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderHeadAxis('day', arg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    },\n                ],\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (contentArg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderTableRowAxis(contentArg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        content: allDayContent,\n                    },\n                ],\n            });\n            sections.push({\n                key: 'all-day-divider',\n                type: 'body',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        let isNowIndicator = context.options.nowIndicator;\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunks: [\n                {\n                    key: 'axis',\n                    content: (arg) => (\n                    // TODO: make this now-indicator arrow more DRY with TimeColsContent\n                    createElement(\"div\", { className: \"fc-timegrid-axis-chunk\" },\n                        createElement(\"table\", { \"aria-hidden\": true, style: { height: arg.expandRows ? arg.clientHeight : '' } },\n                            arg.tableColGroupNode,\n                            createElement(\"tbody\", null,\n                                createElement(TimeBodyAxis, { slatMetas: slatMetas }))),\n                        createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" },\n                            createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, (nowDate) => {\n                                let nowIndicatorTop = isNowIndicator &&\n                                    slatCoords &&\n                                    slatCoords.safeComputeTop(nowDate); // might return void\n                                if (typeof nowIndicatorTop === 'number') {\n                                    return (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: nowDate }));\n                                }\n                                return null;\n                            })))),\n                },\n                {\n                    key: 'cols',\n                    scrollerElRef: this.scrollerElRef,\n                    content: timeContent,\n                },\n            ],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                key: 'footer',\n                type: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'cols',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: false, colGroups: [\n                    { width: 'shrink', cols: [{ width: 'shrink' }] },\n                    { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n                ], sections: sections })));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    getAllDayMaxEventProps() {\n        let { dayMaxEvents, dayMaxEventRows } = this.context.options;\n        if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n            dayMaxEvents = undefined;\n            dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n        }\n        return { dayMaxEvents, dayMaxEventRows };\n    }\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\nclass TimeColsSlatsCoords {\n    constructor(positions, dateProfile, slotDuration) {\n        this.positions = positions;\n        this.dateProfile = dateProfile;\n        this.slotDuration = slotDuration;\n    }\n    safeComputeTop(date) {\n        let { dateProfile } = this;\n        if (rangeContainsMarker(dateProfile.currentRange, date)) {\n            let startOfDayDate = startOfDay(date);\n            let timeMs = date.valueOf() - startOfDayDate.valueOf();\n            if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n                timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n                return this.computeTimeTop(createDuration(timeMs));\n            }\n        }\n        return null;\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    computeDateTop(when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n    computeTimeTop(duration) {\n        let { positions, dateProfile } = this;\n        let len = positions.els.length;\n        // floating-point value of # of slots covered\n        let slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n        let slatIndex;\n        let slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because slotMinTime/slotMaxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return positions.tops[slatIndex] +\n            positions.getHeight(slatIndex) * slatRemainder;\n    }\n}\n\nclass TimeColsSlatsBody extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { slatElRefs } = props;\n        return (createElement(\"tbody\", null, props.slatMetas.map((slatMeta, i) => {\n            let renderProps = {\n                time: slatMeta.time,\n                date: context.dateEnv.toDate(slatMeta.date),\n                view: context.viewApi,\n            };\n            return (createElement(\"tr\", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },\n                props.axis && (createElement(TimeColsAxisCell, Object.assign({}, slatMeta))),\n                createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                        'fc-timegrid-slot',\n                        'fc-timegrid-slot-lane',\n                        !slatMeta.isLabeled && 'fc-timegrid-slot-minor',\n                    ], elAttrs: {\n                        'data-time': slatMeta.isoTimeStr,\n                    }, renderProps: renderProps, generatorName: \"slotLaneContent\", customGenerator: options.slotLaneContent, classNameGenerator: options.slotLaneClassNames, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount })));\n        })));\n    }\n}\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nclass TimeColsSlats extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.slatElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(\"div\", { ref: this.rootElRef, className: \"fc-timegrid-slots\" },\n            createElement(\"table\", { \"aria-hidden\": true, className: context.theme.getClass('table'), style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                    height: props.minHeight,\n                } },\n                props.tableColGroupNode /* relies on there only being a single <col> for the axis */,\n                createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));\n    }\n    componentDidMount() {\n        this.updateSizing();\n    }\n    componentDidUpdate() {\n        this.updateSizing();\n    }\n    componentWillUnmount() {\n        if (this.props.onCoords) {\n            this.props.onCoords(null);\n        }\n    }\n    updateSizing() {\n        let { context, props } = this;\n        if (props.onCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            let rootEl = this.rootElRef.current;\n            if (rootEl.offsetHeight) { // not hidden by css\n                props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n            }\n        }\n    }\n}\nfunction collectSlatEls(elMap, slatMetas) {\n    return slatMetas.map((slatMeta) => elMap[slatMeta.key]);\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n    let segsByCol = [];\n    let i;\n    for (i = 0; i < colCnt; i += 1) {\n        segsByCol.push([]);\n    }\n    if (segs) {\n        for (i = 0; i < segs.length; i += 1) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n    }\n    return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.col].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nclass TimeColMoreLink extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-timegrid-more-link'], elStyle: {\n                top: props.top,\n                bottom: props.bottom,\n            }, allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: () => renderPlainFgSegs(props.hiddenSegs, props), defaultGenerator: renderMoreLinkInner, forceTimed: true }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky'] }))));\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n    let hierarchy = new SegHierarchy();\n    if (strictOrder != null) {\n        hierarchy.strictOrder = strictOrder;\n    }\n    if (maxStackCnt != null) {\n        hierarchy.maxStackCnt = maxStackCnt;\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let hiddenGroups = groupIntersectingEntries(hiddenEntries);\n    let web = buildWeb(hierarchy);\n    web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n    let segRects = webToRects(web);\n    return { segRects, hiddenGroups };\n}\nfunction buildWeb(hierarchy) {\n    const { entriesByLevel } = hierarchy;\n    const buildNode = cacheable((level, lateral) => level + ':' + lateral, (level, lateral) => {\n        let siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n        let nextLevelRes = buildNodes(siblingRange, buildNode);\n        let entry = entriesByLevel[level][lateral];\n        return [\n            Object.assign(Object.assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),\n            entry.thickness + nextLevelRes[1], // the pressure builds\n        ];\n    });\n    return buildNodes(entriesByLevel.length\n        ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n        : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n    if (!siblingRange) {\n        return [[], 0];\n    }\n    let { level, lateralStart, lateralEnd } = siblingRange;\n    let lateral = lateralStart;\n    let pairs = [];\n    while (lateral < lateralEnd) {\n        pairs.push(buildNode(level, lateral));\n        lateral += 1;\n    }\n    pairs.sort(cmpDescPressures);\n    return [\n        pairs.map(extractNode),\n        pairs[0][1], // first item's pressure\n    ];\n}\nfunction cmpDescPressures(a, b) {\n    return b[1] - a[1];\n}\nfunction extractNode(a) {\n    return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n    let { levelCoords, entriesByLevel } = hierarchy;\n    let subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n    let afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n    let levelCnt = levelCoords.length;\n    let level = subjectLevel;\n    // skip past levels that are too high up\n    for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)\n        ; // do nothing\n    for (; level < levelCnt; level += 1) {\n        let entries = entriesByLevel[level];\n        let entry;\n        let searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n        let lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n        let lateralEnd = lateralStart;\n        while ( // loop through entries that horizontally intersect\n        (entry = entries[lateralEnd]) && // but not past the whole seg list\n            entry.span.start < subjectEntry.span.end) {\n            lateralEnd += 1;\n        }\n        if (lateralStart < lateralEnd) {\n            return { level, lateralStart, lateralEnd };\n        }\n    }\n    return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n    const stretchNode = cacheable((node, startCoord, prevThickness) => buildEntryKey(node), (node, startCoord, prevThickness) => {\n        let { nextLevelNodes, thickness } = node;\n        let allThickness = thickness + prevThickness;\n        let thicknessFraction = thickness / allThickness;\n        let endCoord;\n        let newChildren = [];\n        if (!nextLevelNodes.length) {\n            endCoord = totalThickness;\n        }\n        else {\n            for (let childNode of nextLevelNodes) {\n                if (endCoord === undefined) {\n                    let res = stretchNode(childNode, startCoord, allThickness);\n                    endCoord = res[0];\n                    newChildren.push(res[1]);\n                }\n                else {\n                    let res = stretchNode(childNode, endCoord, 0);\n                    newChildren.push(res[1]);\n                }\n            }\n        }\n        let newThickness = (endCoord - startCoord) * thicknessFraction;\n        return [endCoord - newThickness, Object.assign(Object.assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];\n    });\n    return topLevelNodes.map((node) => stretchNode(node, 0, 0)[1]);\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n    let rects = [];\n    const processNode = cacheable((node, levelCoord, stackDepth) => buildEntryKey(node), (node, levelCoord, stackDepth) => {\n        let rect = Object.assign(Object.assign({}, node), { levelCoord,\n            stackDepth, stackForward: 0 });\n        rects.push(rect);\n        return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);\n    });\n    function processNodes(nodes, levelCoord, stackDepth) {\n        let stackForward = 0;\n        for (let node of nodes) {\n            stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n        }\n        return stackForward;\n    }\n    processNodes(topLevelNodes, 0, 0);\n    return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n    const cache = {};\n    return (...args) => {\n        let key = keyFunc(...args);\n        return (key in cache)\n            ? cache[key]\n            : (cache[key] = workFunc(...args));\n    };\n}\n\nfunction computeSegVCoords(segs, colDate, slatCoords = null, eventMinHeight = 0) {\n    let vcoords = [];\n    if (slatCoords) {\n        for (let i = 0; i < segs.length; i += 1) {\n            let seg = segs[i];\n            let spanStart = slatCoords.computeDateTop(seg.start, colDate);\n            let spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(\n            slatCoords.computeDateTop(seg.end, colDate));\n            vcoords.push({\n                start: Math.round(spanStart),\n                end: Math.round(spanEnd), //\n            });\n        }\n    }\n    return vcoords;\n}\nfunction computeFgSegPlacements(segs, segVCoords, // might not have for every seg\neventOrderStrict, eventMaxStack) {\n    let segInputs = [];\n    let dumbSegs = []; // segs without coords\n    for (let i = 0; i < segs.length; i += 1) {\n        let vcoords = segVCoords[i];\n        if (vcoords) {\n            segInputs.push({\n                index: i,\n                thickness: 1,\n                span: vcoords,\n            });\n        }\n        else {\n            dumbSegs.push(segs[i]);\n        }\n    }\n    let { segRects, hiddenGroups } = buildPositioning(segInputs, eventOrderStrict, eventMaxStack);\n    let segPlacements = [];\n    for (let segRect of segRects) {\n        segPlacements.push({\n            seg: segs[segRect.index],\n            rect: segRect,\n        });\n    }\n    for (let dumbSeg of dumbSegs) {\n        segPlacements.push({ seg: dumbSeg, rect: null });\n    }\n    return { segPlacements, hiddenGroups };\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: false,\n});\nclass TimeColEvent extends BaseComponent {\n    render() {\n        return (createElement(StandardEvent, Object.assign({}, this.props, { elClasses: [\n                'fc-timegrid-event',\n                'fc-v-event',\n                this.props.isShort && 'fc-timegrid-event-short',\n            ], defaultTimeFormat: DEFAULT_TIME_FORMAT })));\n    }\n}\n\nclass TimeCol extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.sortEventSegs = memoize(sortEventSegs);\n    }\n    // TODO: memoize event-placement?\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let isSelectMirror = options.selectMirror;\n        let mirrorSegs = // yuck\n         (props.eventDrag && props.eventDrag.segs) ||\n            (props.eventResize && props.eventResize.segs) ||\n            (isSelectMirror && props.dateSelectionSegs) ||\n            [];\n        let interactionAffectedInstances = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        let sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: props.elRef, elClasses: [\n                'fc-timegrid-col',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'gridcell' }, props.extraDataAttrs), date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraRenderProps: props.extraRenderProps }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n            createElement(\"div\", { className: \"fc-timegrid-col-bg\" },\n                this.renderFillSegs(props.businessHourSegs, 'non-business'),\n                this.renderFillSegs(props.bgEventSegs, 'bg-event'),\n                this.renderFillSegs(props.dateSelectionSegs, 'highlight')),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')),\n            createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, this.renderNowIndicator(props.nowIndicatorSegs)),\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-col-misc'] }))))));\n    }\n    renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { props } = this;\n        if (props.forPrint) {\n            return renderPlainFgSegs(sortedFgSegs, props);\n        }\n        return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n    renderPositionedFgSegs(segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { eventMaxStack, eventShortHeight, eventOrderStrict, eventMinHeight } = this.context.options;\n        let { date, slatCoords, eventSelection, todayRange, nowDate } = this.props;\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n        let { segPlacements, hiddenGroups } = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack);\n        return (createElement(Fragment, null,\n            this.renderHiddenGroups(hiddenGroups, segs),\n            segPlacements.map((segPlacement) => {\n                let { seg, rect } = segPlacement;\n                let instanceId = seg.eventRange.instance.instanceId;\n                let isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n                let vStyle = computeSegVStyle(rect && rect.span);\n                let hStyle = (!isMirror && rect) ? this.computeSegHStyle(rect) : { left: 0, right: 0 };\n                let isInset = Boolean(rect) && rect.stackForward > 0;\n                let isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem\n                return (createElement(\"div\", { className: 'fc-timegrid-event-harness' +\n                        (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: forcedKey || instanceId, style: Object.assign(Object.assign({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },\n                    createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, getSegMeta(seg, todayRange, nowDate)))));\n            })));\n    }\n    // will already have eventMinHeight applied because segInputs already had it\n    renderHiddenGroups(hiddenGroups, segs) {\n        let { extraDateSpan, dateProfile, todayRange, nowDate, eventSelection, eventDrag, eventResize } = this.props;\n        return (createElement(Fragment, null, hiddenGroups.map((hiddenGroup) => {\n            let positionCss = computeSegVStyle(hiddenGroup.span);\n            let hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n            return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));\n        })));\n    }\n    renderFillSegs(segs, fillType) {\n        let { props, context } = this;\n        let segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n        let children = segVCoords.map((vcoords, i) => {\n            let seg = segs[i];\n            return (createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-timegrid-bg-harness\", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?\n                createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :\n                renderFill(fillType)));\n        });\n        return createElement(Fragment, null, children);\n    }\n    renderNowIndicator(segs) {\n        let { slatCoords, date } = this.props;\n        if (!slatCoords) {\n            return null;\n        }\n        return segs.map((seg, i) => (createElement(NowIndicatorContainer\n        // key doesn't matter. will only ever be one\n        , { \n            // key doesn't matter. will only ever be one\n            key: i, elClasses: ['fc-timegrid-now-indicator-line'], elStyle: {\n                top: slatCoords.computeDateTop(seg.start, date),\n            }, isAxis: false, date: date })));\n    }\n    computeSegHStyle(segHCoords) {\n        let { isRtl, options } = this.context;\n        let shouldOverlap = options.slotEventOverlap;\n        let nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n        let farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n        let left; // amount of space from left edge, a fraction of the total width\n        let right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - farCoord;\n            right = nearCoord;\n        }\n        else {\n            left = nearCoord;\n            right = 1 - farCoord;\n        }\n        let props = {\n            zIndex: segHCoords.stackDepth + 1,\n            left: left * 100 + '%',\n            right: right * 100 + '%',\n        };\n        if (shouldOverlap && !segHCoords.stackForward) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    }\n}\nfunction renderPlainFgSegs(sortedFgSegs, { todayRange, nowDate, eventSelection, eventDrag, eventResize }) {\n    let hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||\n        (eventResize ? eventResize.affectedInstances : null) ||\n        {};\n    return (createElement(Fragment, null, sortedFgSegs.map((seg) => {\n        let instanceId = seg.eventRange.instance.instanceId;\n        return (createElement(\"div\", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },\n            createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));\n    })));\n}\nfunction computeSegVStyle(segVCoords) {\n    if (!segVCoords) {\n        return { top: '', bottom: '' };\n    }\n    return {\n        top: segVCoords.start,\n        bottom: -segVCoords.end,\n    };\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n    return segEntries.map((segEntry) => allSegs[segEntry.index]);\n}\n\nclass TimeColsContent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.splitFgEventSegs = memoize(splitSegsByCol);\n        this.splitBgEventSegs = memoize(splitSegsByCol);\n        this.splitBusinessHourSegs = memoize(splitSegsByCol);\n        this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n        this.splitDateSelectionSegs = memoize(splitSegsByCol);\n        this.splitEventDrag = memoize(splitInteractionByCol);\n        this.splitEventResize = memoize(splitInteractionByCol);\n        this.rootElRef = createRef();\n        this.cellElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let nowIndicatorTop = context.options.nowIndicator &&\n            props.slatCoords &&\n            props.slatCoords.safeComputeTop(props.nowDate); // might return void\n        let colCnt = props.cells.length;\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n        let nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n        return (createElement(\"div\", { className: \"fc-timegrid-cols\", ref: this.rootElRef },\n            createElement(\"table\", { role: \"presentation\", style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                } },\n                props.tableColGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(\"tr\", { role: \"row\" },\n                        props.axis && (createElement(\"td\", { \"aria-hidden\": true, className: \"fc-timegrid-col fc-timegrid-axis\" },\n                            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: props.nowDate })))))),\n                        props.cells.map((cell, i) => (createElement(TimeCol, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint }))))))));\n    }\n    componentDidMount() {\n        this.updateCoords();\n    }\n    componentDidUpdate() {\n        this.updateCoords();\n    }\n    updateCoords() {\n        let { props } = this;\n        if (props.onColCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n            false));\n        }\n    }\n}\nfunction collectCellEls(elMap, cells) {\n    return cells.map((cell) => elMap[cell.key]);\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nclass TimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.processSlotOptions = memoize(processSlotOptions);\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleRootEl = (el) => {\n            if (el) {\n                this.context.registerInteractiveComponent(this, {\n                    el,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n        this.handleScrollRequest = (request) => {\n            let { onScrollTopRequest } = this.props;\n            let { slatCoords } = this.state;\n            if (onScrollTopRequest && slatCoords) {\n                if (request.time) {\n                    let top = slatCoords.computeTimeTop(request.time);\n                    top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n                    if (top) {\n                        top += 1; // to overcome top border that slots beyond the first have. looks better\n                    }\n                    onScrollTopRequest(top);\n                }\n                return true;\n            }\n            return false;\n        };\n        this.handleColCoords = (colCoords) => {\n            this.colCoords = colCoords;\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n            if (this.props.onSlatCoords) {\n                this.props.onSlatCoords(slatCoords);\n            }\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(\"div\", { className: \"fc-timegrid-body\", ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),\n            createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));\n    }\n    componentDidMount() {\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n    componentDidUpdate(prevProps) {\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n    componentWillUnmount() {\n        this.scrollResponder.detach();\n    }\n    queryHit(positionLeft, positionTop) {\n        let { dateEnv, options } = this.context;\n        let { colCoords } = this;\n        let { dateProfile } = this.props;\n        let { slatCoords } = this.state;\n        let { snapDuration, snapsPerSlot } = this.processSlotOptions(this.props.slotDuration, options.snapDuration);\n        let colIndex = colCoords.leftToIndex(positionLeft);\n        let slatIndex = slatCoords.positions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            let cell = this.props.cells[colIndex];\n            let slatTop = slatCoords.positions.tops[slatIndex];\n            let slatHeight = slatCoords.positions.getHeight(slatIndex);\n            let partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            let localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            let snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            let dayDate = this.props.cells[colIndex].date;\n            let time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n            let start = dateEnv.add(dayDate, time);\n            let end = dateEnv.add(start, snapDuration);\n            return {\n                dateProfile,\n                dateSpan: Object.assign({ range: { start, end }, allDay: false }, cell.extraDateSpan),\n                dayEl: colCoords.els[colIndex],\n                rect: {\n                    left: colCoords.lefts[colIndex],\n                    right: colCoords.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight,\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n}\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n    let snapDuration = snapDurationOverride || slotDuration;\n    let snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n    if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1;\n        // TODO: say warning?\n    }\n    return { snapDuration, snapsPerSlot };\n}\n\nclass DayTimeColsSlicer extends Slicer {\n    sliceRange(range, dayRanges) {\n        let segs = [];\n        for (let col = 0; col < dayRanges.length; col += 1) {\n            let segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col,\n                });\n            }\n        }\n        return segs;\n    }\n}\n\nclass DayTimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDayRanges = memoize(buildDayRanges);\n        this.slicer = new DayTimeColsSlicer();\n        this.timeColsRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        let { dateProfile, dayTableModel } = props;\n        let { nowIndicator, nextDayThreshold } = context.options;\n        let dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n        // give it the first row of cells\n        // TODO: would move this further down hierarchy, but sliceNowDate needs it\n        return (createElement(NowTimer, { unit: nowIndicator ? 'minute' : 'day' }, (nowDate, todayRange) => (createElement(TimeCols, Object.assign({ ref: this.timeColsRef }, this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: nowIndicator && this.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords })))));\n    }\n}\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n    let ranges = [];\n    for (let date of dayTableModel.headerDates) {\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.slotMinTime),\n            end: dateEnv.add(date, dateProfile.slotMaxTime),\n        });\n    }\n    return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nconst STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 },\n];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n    let dayStart = new Date(0);\n    let slatTime = slotMinTime;\n    let slatIterator = createDuration(0);\n    let labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n    let metas = [];\n    while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n        let date = dateEnv.add(dayStart, slatTime);\n        let isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n        metas.push({\n            date,\n            time: slatTime,\n            key: date.toISOString(),\n            isoTimeStr: formatIsoTimeString(date),\n            isLabeled,\n        });\n        slatTime = addDurations(slatTime, slotDuration);\n        slatIterator = addDurations(slatIterator, slotDuration);\n    }\n    return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n    let i;\n    let labelInterval;\n    let slotsPerLabel;\n    // find the smallest stock label interval that results in more than one slots-per-label\n    for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n        labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n            return labelInterval;\n        }\n    }\n    return slotDuration; // fall back\n}\n\nclass DayTimeColsView extends TimeColsView {\n    constructor() {\n        super(...arguments);\n        this.buildTimeColsModel = memoize(buildTimeColsModel);\n        this.buildSlatMetas = memoize(buildSlatMetas);\n    }\n    render() {\n        let { options, dateEnv, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let { dateProfile } = props;\n        let dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n        let splitProps = this.allDaySplitter.splitProps(props);\n        let slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n        let { dayMinWidth } = options;\n        let hasAttachedAxis = !dayMinWidth;\n        let hasDetachedAxis = dayMinWidth;\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));\n        let allDayContent = (options.allDaySlot !== false) && ((contentArg) => (createElement(DayTable, Object.assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, this.getAllDayMaxEventProps()))));\n        let timeGridContent = (contentArg) => (createElement(DayTimeCols, Object.assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: this.handleScrollTopRequest })));\n        return hasDetachedAxis\n            ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n            : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n}\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, false);\n}\n\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-arrow,.fc .fc-timegrid-now-indicator-line{pointer-events:none}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\n\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };\n"],"names":["createPlugin","DayTimeColsView","OPTION_REFINERS","allDaySlot","Boolean","index","name","initialView","optionRefiners","views","timeGrid","component","usesMinMaxTime","slotDuration","slotEventOverlap","timeGridDay","type","duration","days","timeGridWeek","weeks","default","Splitter","hasBgRendering","createFormatter","ViewContextType","ContentContainer","BaseComponent","DateComponent","diffDays","buildNavLinkAttrs","WeekNumberContainer","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","NowTimer","NowIndicatorContainer","renderScrollShim","rangeContainsMarker","startOfDay","asRoughMs","createDuration","RefMap","PositionCache","MoreLinkContainer","SegHierarchy","groupIntersectingEntries","binarySearch","getEntrySpanEnd","buildEntryKey","StandardEvent","memoize","sortEventSegs","DayCellContainer","hasCustomDayCellContent","getSegMeta","buildIsoString","computeEarliestSegStart","buildEventRangeKey","BgEvent","renderFill","addDurations","multiplyDuration","wholeDivideDurations","Slicer","intersectRanges","formatIsoTimeString","DayHeader","DaySeriesModel","DayTableModel","injectStyles","createElement","createRef","Fragment","DayTable","AllDaySplitter","getKeyInfo","allDay","timed","getKeysForDateSpan","dateSpan","getKeysForEventDef","eventDef","DEFAULT_SLAT_LABEL_FORMAT","hour","minute","omitZeroMinute","meridiem","TimeColsAxisCell","props","classNames","isLabeled","Consumer","context","className","join","isoTimeStr","dateEnv","options","viewApi","labelFormat","slotLabelFormat","Array","isArray","renderProps","level","time","date","toDate","view","text","format","elTag","elClasses","elAttrs","generatorName","customGenerator","slotLabelContent","defaultGenerator","renderInnerContent","classNameGenerator","slotLabelClassNames","didMount","slotLabelDidMount","willUnmount","slotLabelWillUnmount","InnerContent","TimeBodyAxis","render","slatMetas","map","slatMeta","key","Object","assign","DEFAULT_WEEK_NUM_FORMAT","week","AUTO_ALL_DAY_MAX_EVENT_ROWS","TimeColsView","constructor","arguments","allDaySplitter","headerElRef","rootElRef","scrollerElRef","state","slatCoords","handleScrollTopRequest","scrollTop","scrollerEl","current","renderHeadAxis","rowKey","frameHeight","dateProfile","range","renderRange","dayCnt","start","end","navLinkAttrs","weekNumbers","defaultFormat","style","height","renderTableRowAxis","rowHeight","allDayText","allDayContent","renderAllDayInner","allDayClassNames","allDayDidMount","allDayWillUnmount","handleSlatCoords","setState","renderSimpleLayout","headerRowContent","timeContent","sections","stickyHeaderDates","push","isSticky","chunk","elRef","tableClassName","rowContent","content","outerContent","role","theme","getClass","liquid","expandRows","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","width","renderHScrollLayout","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","syncRowHeights","chunks","arg","rowSyncHeights","contentArg","colSpan","isNowIndicator","nowIndicator","clientHeight","tableColGroupNode","unit","nowDate","nowIndicatorTop","safeComputeTop","elStyle","top","isAxis","colGroups","span","minWidth","getAllDayMaxEventProps","dayMaxEvents","dayMaxEventRows","undefined","TimeColsSlatsCoords","positions","currentRange","startOfDayDate","timeMs","valueOf","slotMinTime","slotMaxTime","computeTimeTop","computeDateTop","when","len","els","length","slatCoverage","milliseconds","slatIndex","slatRemainder","Math","max","min","floor","tops","getHeight","TimeColsSlatsBody","slatElRefs","i","ref","axis","slotLaneContent","slotLaneClassNames","slotLaneDidMount","slotLaneWillUnmount","TimeColsSlats","tableMinWidth","clientWidth","minHeight","componentDidMount","updateSizing","componentDidUpdate","componentWillUnmount","onCoords","rootEl","offsetHeight","collectSlatEls","currentMap","elMap","splitSegsByCol","segs","segsByCol","col","splitInteractionByCol","ui","byRow","affectedInstances","isEvent","seg","TimeColMoreLink","bottom","allDayDate","moreCnt","hiddenSegs","allSegs","extraDateSpan","todayRange","popoverContent","renderPlainFgSegs","renderMoreLinkInner","forceTimed","shortText","buildPositioning","segInputs","strictOrder","maxStackCnt","hierarchy","hiddenEntries","addSegs","hiddenGroups","web","buildWeb","stretchWeb","segRects","webToRects","entriesByLevel","buildNode","cacheable","lateral","siblingRange","findNextLevelSegs","nextLevelRes","buildNodes","entry","nextLevelNodes","thickness","lateralStart","lateralEnd","pairs","sort","cmpDescPressures","extractNode","a","b","subjectLevel","subjectLateral","levelCoords","subjectEntry","afterSubject","levelCnt","entries","searchIndex","topLevelNodes","totalThickness","stretchNode","node","startCoord","prevThickness","allThickness","thicknessFraction","endCoord","newChildren","childNode","res","newThickness","rects","processNode","levelCoord","stackDepth","rect","stackForward","processNodes","nodes","keyFunc","workFunc","cache","args","computeSegVCoords","colDate","eventMinHeight","vcoords","spanStart","spanEnd","round","computeFgSegPlacements","segVCoords","eventOrderStrict","eventMaxStack","dumbSegs","segPlacements","segRect","dumbSeg","DEFAULT_TIME_FORMAT","TimeColEvent","isShort","defaultTimeFormat","TimeCol","isSelectMirror","selectMirror","mirrorSegs","eventDrag","eventResize","dateSelectionSegs","interactionAffectedInstances","sortedFgSegs","fgEventSegs","eventOrder","extraClassNames","extraDataAttrs","extraRenderProps","renderFillSegs","businessHourSegs","bgEventSegs","renderFgSegs","renderNowIndicator","nowIndicatorSegs","segIsInvisible","isDragging","isResizing","isDateSelecting","forcedKey","renderPositionedFgSegs","eventShortHeight","eventSelection","isMirror","renderHiddenGroups","segPlacement","instanceId","eventRange","instance","isVisible","vStyle","computeSegVStyle","hStyle","computeSegHStyle","left","right","isInset","visibility","isSelected","hiddenGroup","positionCss","compileSegsFromEntries","fillType","children","segHCoords","isRtl","shouldOverlap","nearCoord","farCoord","zIndex","hiddenInstances","segEntries","segEntry","TimeColsContent","splitFgEventSegs","splitBgEventSegs","splitBusinessHourSegs","splitNowIndicatorSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","cellElRefs","cells","fgEventSegsByRow","bgEventSegsByRow","businessHourSegsByRow","nowIndicatorSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","cell","updateCoords","onColCoords","collectCellEls","TimeCols","processSlotOptions","handleRootEl","el","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","handleScrollRequest","request","onScrollTopRequest","ceil","handleColCoords","colCoords","onSlatCoords","scrollResponder","createScrollResponder","prevProps","update","detach","queryHit","positionLeft","positionTop","snapDuration","snapsPerSlot","colIndex","leftToIndex","topToIndex","slatTop","slatHeight","partial","localSnapIndex","snapIndex","dayDate","add","dayEl","lefts","rights","layer","snapDurationOverride","DayTimeColsSlicer","sliceRange","dayRanges","segRange","isStart","isEnd","DayTimeCols","buildDayRanges","slicer","timeColsRef","dayTableModel","nextDayThreshold","sliceProps","sliceNowDate","ranges","headerDates","STOCK_SUB_DURATIONS","hours","minutes","seconds","buildSlatMetas","explicitLabelInterval","dayStart","Date","slatTime","slatIterator","labelInterval","computeLabelInterval","metas","toISOString","slotsPerLabel","buildTimeColsModel","dateProfileGenerator","splitProps","slotLabelInterval","hasAttachedAxis","hasDetachedAxis","headerContent","dayHeaders","dates","datesRepDistinctDays","renderIntro","colGroupNode","renderRowIntro","showWeekNumbers","headerAlignElRef","timeGridContent","daySeries","css_248z"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}