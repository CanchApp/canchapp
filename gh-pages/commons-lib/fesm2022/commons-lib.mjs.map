{"version":3,"file":"commons-lib.mjs","sources":["../../../projects/libs/commons-lib/src/lib/enum/commons.enum.ts","../../../projects/libs/commons-lib/src/lib/models/notification.model.ts","../../../projects/libs/commons-lib/src/lib/service/jquery-service.service.ts","../../../projects/libs/commons-lib/src/lib/notification.service.ts","../../../projects/libs/commons-lib/src/lib/commons-lib.service.ts","../../../projects/libs/commons-lib/src/lib/components/browser/browser.component.ts","../../../projects/libs/commons-lib/src/lib/components/browser/browser.component.html","../../../projects/libs/commons-lib/src/lib/components/select/select.component.ts","../../../projects/libs/commons-lib/src/lib/components/select/select.component.html","../../../projects/libs/commons-lib/src/lib/components/date/date.component.ts","../../../projects/libs/commons-lib/src/lib/components/date/date.component.html","../../../projects/libs/commons-lib/src/lib/commons-lib.component.ts","../../../projects/libs/commons-lib/src/lib/commons-lib.module.ts","../../../projects/libs/commons-lib/src/public-api.ts","../../../projects/libs/commons-lib/src/commons-lib.ts"],"sourcesContent":["export enum ApiEnum {\r\n    Customer = 'http://localhost:5194/api/Customer/',\r\n    Report = 'http://localhost:5195/api/Report/',\r\n    DashBoard = 'http://localhost:5195/api/DashBoard/',\r\n    Booking = 'http://localhost:5196/api/Booking/',\r\n    Security = 'http://localhost:5197/api/Security/',\r\n    Company = 'http://localhost:5198/api/Company/',\r\n    Browser = 'http://localhost:5199/api/Browser/',  \r\n    Select = 'http://localhost:5199/api/Select/',\r\n    HoliDay = 'http://localhost:5199/api/HoliDay/',\r\n    Court = 'http://localhost:5199/api/Court/',    \r\n}\r\nexport enum NotificationTypeEnum {\r\n\tSucces = 'success',\r\n    Default = 'default',\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Warning = 'warning',\r\n    Danger = 'danger',\r\n\tInfo = 'info'\r\n}\r\nexport enum PlacementFromEnum {\r\n\tTop = 'top',\r\n\tBottom = 'bottom'\r\n}\r\nexport enum PlacementAlignEnum {\r\n\tLeft = 'left',\r\n\tRight = 'right',\r\n    Center = 'center'\r\n}\r\nexport enum PaymentTypeEnum {\r\n    None = 0,\r\n\tCash = 1,\r\n\tDebit = 2,\r\n    Credit = 3\r\n}\r\nexport enum PaymentStatusEnum {\r\n    None = 0,\r\n    Pending = 1,\r\n    Paid = 2\r\n}\r\nexport enum BrowserIdEnum {\r\n\tBrowserCustomer = 'BrowserCustomer'\r\n}\r\nexport enum SelectIdEnum {\r\n\tListCourt = 'ListCourt'\r\n}\r\nexport enum ActionEnum {\r\n\tNone = 0,\r\n\tCreate = 1,\r\n    Edit = 2,\r\n    Detail = 3,\r\n    Delete = 4\r\n}\r\nexport enum CodeErrorEnum {\r\n    /* Error general  */\r\n    InternalServerError = 100,\r\n    /* Error Reservas  */\r\n\tBookingNotAvailable = 101,\r\n    BookingNotFound = 102,\r\n    BookingPaid = 103,\r\n    BookingDateStartMustBeGreater = 104,\r\n    /* Error Canchas  */\r\n\tCourtWithRecords = 201,\r\n    CourtNotFound = 202,\r\n}\r\nexport enum DayEnum {\r\n\tMonday = 1,\r\n    Tuesday = 2,\r\n    Wednesday = 3,\r\n    Thursday = 4,\r\n    Friday = 5,\r\n    Saturday = 6,\r\n    Sunday = 7\r\n}\r\n","import { NotificationTypeEnum, PlacementAlignEnum, PlacementFromEnum } from \"../enum/commons.enum\";\r\n\r\n/**\r\n * @property {number} delay - Tiempo que demora en estar visible la notificación.\r\n * @property {string} title - Titulo a mostrar en la notificación.\r\n * @property {string} message Texto a mostrar en la notificación.\r\n * @property {string} icon Icono a mostrar en la notificación.\r\n * @property {NotificationType} type Tipo de notificación.\r\n * @property {PlacementFrom} placementFrom Colocación de la notificación.\r\n * @property {placementAlign} placementAlign Alineacion de la notificación.\r\n */\r\nexport class Notifications {\r\n    delay: number = 3000;\r\n    title: string = '';\r\n    message: string = '';\r\n    icon: string = 'none';\r\n    type: NotificationTypeEnum = NotificationTypeEnum.Default;\r\n    placementFrom: PlacementFromEnum = PlacementFromEnum.Top;\r\n    placementAlign: PlacementAlignEnum = PlacementAlignEnum.Right;\r\n}","import { Injectable } from '@angular/core';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    $: any;\r\n    jQuery: any;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class JqueryService {\r\n\r\n  constructor() {\r\n    if (!window.$) {\r\n      window.$ = window.jQuery; // Asegúrate de que jQuery esté asignado\r\n    }\r\n  }\r\n\r\n  public useJQuery() {\r\n    // Aquí puedes exponer métodos que usen jQuery\r\n    return window.$;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JqueryService } from './service/jquery-service.service';\r\nimport { Notifications } from './models/notification.model';\r\nimport { NotificationTypeEnum } from './enum/commons.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  private readonly $ = this.jqueryService.useJQuery();\r\n\r\n  constructor(private readonly jqueryService: JqueryService) { \r\n\r\n  }\r\n\r\n    /**\r\n   * Genera una notificacion.\r\n   * @param {Notifications}  notificacion - Objeto configuración de la notificación.\r\n   */\r\n  showCustomNotification(notification: Notifications) {    \r\n    this.$.notify(notification,{\r\n      type: notification.type,\r\n      placement: {\r\n        from: notification.placementFrom,\r\n        align: notification.placementAlign\r\n      },\r\n      time: 1000,\r\n      delay: notification.delay,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Genera una notificacion con plantilla exitosa.\r\n   * @param _message - Mensaje a mostrar en la notificación.\r\n   */\r\n  SuccesNotification(_message: string) {\r\n    const notiSucces: Notifications = new Notifications();\r\n    notiSucces.message = _message;\r\n    notiSucces.icon = 'fa-solid fa-check';\r\n    notiSucces.type = NotificationTypeEnum.Succes;\r\n    this.showCustomNotification(notiSucces);\r\n  }\r\n\r\n  /**\r\n   * Genera una notificacion con plantilla informativa.\r\n   * @param _title - Titulo de la notificación.\r\n   * @param _message - Mensaje a mostrar en la notificación.\r\n   */\r\n  InfoNotification(_message: string) {\r\n    const notiSucces: Notifications = new Notifications();\r\n    notiSucces.message = _message;\r\n    notiSucces.icon = 'fa-solid fa-info';\r\n    notiSucces.type = NotificationTypeEnum.Info;\r\n    this.showCustomNotification(notiSucces);\r\n  }\r\n\r\n  /**\r\n * Genera una notificacion con plantilla de error.\r\n * @param _title - Titulo de la notificación.\r\n * @param _message - Mensaje a mostrar en la notificación.\r\n */\r\n  ErrorNotification(_message: string) {\r\n    const notiSucces: Notifications = new Notifications();\r\n    notiSucces.message = _message;\r\n    notiSucces.icon = 'fa-solid fa-bell';\r\n    notiSucces.type = NotificationTypeEnum.Danger;\r\n    this.showCustomNotification(notiSucces);\r\n  }\r\n\r\n  /**\r\n * Genera una notificacion con plantilla de advertencia.\r\n * @param _title - Titulo de la notificación.\r\n * @param _message - Mensaje a mostrar en la notificación.\r\n */\r\n  WarningNotification( _message: string) {\r\n    const notiSucces: Notifications = new Notifications();\r\n    notiSucces.message = _message;\r\n    notiSucces.icon = 'fa-solid fa-exclamation';\r\n    notiSucces.type = NotificationTypeEnum.Warning;\r\n    this.showCustomNotification(notiSucces);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonsLibService {\r\n\r\n  constructor() { }\r\n\r\n  getFormatIsoDate(date: Date | string, time: string): string {\r\n\r\n    let _date = new Date(date);\r\n    const year = _date.getFullYear();\r\n    const month = String(_date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(_date.getDate()).padStart(2, '0');\r\n    const hours = time.split(':')[0];\r\n    const minutes = time.split(':')[1];\r\n    const localISOString = `${year}-${month}-${day}T${hours}:${minutes}:00`;\r\n    return localISOString;\r\n  }\r\n\r\n  getTime(date: Date | string): string {\r\n\r\n    let _date = new Date(date);\r\n    const hours = _date.getHours().toString().padStart(2, '0');\r\n    const minutes = _date.getMinutes().toString().padStart(2, '0');\r\n    return `${hours}:${minutes}:00`;\r\n  }\r\n\r\n  getMonthText(numberMonth: number) {\r\n    const monthText = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    return monthText[numberMonth];\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { ApiEnum, BrowserIdEnum } from '../../enum/commons.enum';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\n\r\nconst VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => BrowserComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'lib-browser',\r\n  standalone: true,\r\n  imports: [TranslateModule, CommonModule],\r\n  templateUrl: './browser.component.html',\r\n  styleUrl: './browser.component.css',\r\n  providers: [VALUE_ACCESSOR],\r\n})\r\nexport class BrowserComponent implements ControlValueAccessor {\r\n\r\n  @Input() browserId!: BrowserIdEnum;\r\n  @Input() placeHolder: string = 'Browser.LookFor';\r\n  @Input() addItem: boolean = false;\r\n\r\n  @Output() onItemSelected = new EventEmitter<{ text: string, id: string, args?: string }>(); // Evento para emitir el ítem seleccionado\r\n\r\n  public items: { text: string, id: string, args?: string }[] = [];\r\n  public selectedItem: any = null;\r\n\r\n  error: string | null = null;\r\n  value: { text: string, id: string, args?: string } | null = null;\r\n  isDisabled: boolean = false;\r\n\r\n  onChangeFn: (value: { text: string, id: string, args?: string } | null) => void = () => {};\r\n  onTouchedFn: () => void = () => {};\r\n\r\n  private readonly inputSubject = new Subject<string>();\r\n  private readonly inputSubscription: Subscription;\r\n\r\n  constructor(\r\n    public translate: TranslateService,\r\n    private readonly http: HttpClient) {\r\n\r\n    // Configurar el manejo de las entradas del usuario\r\n    this.inputSubscription = this.inputSubject\r\n    .pipe(\r\n      debounceTime(300), // Espera 300 ms después de la última entrada\r\n      distinctUntilChanged(), // Evita llamadas si el valor no cambia\r\n      switchMap((filter) => this.callApi(filter).pipe(\r\n        catchError((error) => {\r\n          this.error = error.message || 'Error desconocido';\r\n          return of([]); // Devuelve un array vacío para continuar el flujo\r\n        })\r\n      ))\r\n    )\r\n    .subscribe((response: { text: string, id: string, args?: string }[]) => {\r\n      this.error = null; // Limpia el error en caso de éxito\r\n      if(response.length == 0 && this.addItem)\r\n        response.push({ text: 'Agregar item', id: '-1', args: 'addItem' });\r\n\r\n      this.items = response;\r\n    });\r\n  }\r\n\r\n  writeValue(value: { text: string, id: string, args?: string } | null): void {\r\n    this.value = value || null;\r\n  }\r\n\r\n  registerOnChange(fn: (value: { text: string, id: string, args?: string } | null) => void): void {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouchedFn = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n  onInput(event: Event): void {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n    this.value = { text: inputValue, id: '' }; // Solo el texto al principio\r\n    // Notifica el cambio al formulario\r\n    this.onChangeFn(this.value);\r\n\r\n    // Emite el valor ingresado para manejarlo con debounceTime\r\n    this.inputSubject.next(inputValue);\r\n  }\r\n\r\n  private callApi(filter: string): Observable<{ text: string, id: string, args?: string }[]> {\r\n    const apiUrl = `${ApiEnum.Browser}GetBrowserNotTenant/${this.browserId}/${filter}`;\r\n    return this.http.get<any[]>(apiUrl);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Limpia la suscripción al destruir el componente\r\n    this.inputSubscription.unsubscribe();\r\n  }\r\n\r\n  // Función para manejar la selección de un item\r\n  onSelectItem(item: { text: string, id: string, args?: string }): void {\r\n    if(item.id == '-1' && this.addItem) {\r\n      this.items = []; // Limpia las sugerencias\r\n      this.onItemSelected.emit(item); // Emitir el ítem seleccionado\r\n      return;\r\n    }\r\n    this.selectedItem = item;\r\n    this.value = item; // Establece el valor seleccionado\r\n    this.onChangeFn(item); // Notifica al formulario\r\n    this.items = []; // Limpia las sugerencias\r\n  }\r\n\r\n  clearSelected(): void {\r\n    this.selectedItem = null;\r\n    this.value = null; // Limpia el valor del campo\r\n    this.items = []; // Limpia las sugerencias\r\n    this.onChangeFn(null); // Notifica al formulario el cambio a vacío\r\n  }\r\n\r\n  selectItem(): any {\r\n    return this.selectedItem;\r\n  }\r\n\r\n}\r\n","<div class=\"position-relative\">      \r\n    <div class=\"input-group\">\r\n      <span class=\"input-group-text\">\r\n        <i class=\"fa fa-search\"></i>\r\n      </span>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ placeHolder | translate}}\"\r\n        [value]=\"value?.text\"\r\n        [disabled]=\"isDisabled\"\r\n        (input)=\"onInput($event)\"\r\n        (blur)=\"onTouchedFn()\" />\r\n      <span *ngIf=\"selectedItem\" class=\"input-group-text\" (click)=\"clearSelected()\" >x</span>\r\n    </div>\r\n    <ul *ngIf=\"items.length > 0\" class=\"list-group position-absolute mt-1 items-dropdown\">\r\n      <li *ngFor=\"let item of items\" \r\n        class=\"list-group-item list-group-item-action\" \r\n        [ngClass]=\"(item.id == '-1') ? item.args : '' \" \r\n        (click)=\"onSelectItem(item)\">\r\n        {{ item.text }}\r\n      </li>\r\n    </ul>\r\n</div>\r\n  \r\n\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ApiEnum, SelectIdEnum } from '../../enum/commons.enum';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => SelectComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'lib-select',\r\n  standalone: true,\r\n  imports: [TranslateModule, CommonModule],\r\n  templateUrl: './select.component.html',\r\n  styleUrl: './select.component.css',\r\n  providers: [VALUE_ACCESSOR],\r\n})\r\nexport class SelectComponent implements ControlValueAccessor, OnInit {\r\n\r\n  @Input() selectId!: SelectIdEnum;\r\n  @Input() placeHolder: string = 'Select.SelectOption';\r\n  @Input() empty: boolean = true;\r\n\r\n  public items: { text: string, id: string, args?: string }[] = [];\r\n  error: string | null = null;\r\n  value: { text: string, id: string, args?: string } | null = null;\r\n  isDisabled: boolean = false;\r\n\r\n  onChangeFn: (value: { text: string, id: string, args?: string } | null) => void = () => {};\r\n  onTouchedFn: () => void = () => {};\r\n\r\n  private selectSubscription: Subscription | undefined;\r\n\r\n  constructor(\r\n    public translate: TranslateService,\r\n    private readonly http: HttpClient) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const apiUrl = `${ApiEnum.Select}GetSelect/${this.selectId}`;\r\n    this.selectSubscription = this.http.get<any[]>(apiUrl).subscribe((response) => {\r\n      this.items = response;\r\n      if(!this.empty && this.items.length > 0) {\r\n        this.writeValue(this.items[0]);\r\n        this.onChangeFn(this.items[0]);\r\n      }\r\n    });\r\n  }\r\n  \r\n  writeValue(value: { text: string, id: string, args?: string } | null): void {\r\n    this.value = value || null;\r\n  }\r\n\r\n  registerOnChange(fn: (value: { text: string, id: string, args?: string } | null) => void): void {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouchedFn = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n  onChange($event: any): void {\r\n\r\n    const item = this.items.find(item => item.id == $event.target.value);\r\n\r\n    if (item) {\r\n      this.onChangeFn(item);\r\n    } else {\r\n      this.onChangeFn(null);\r\n    }\r\n    this.onTouchedFn();\r\n  }\r\n\r\n  onTouched(): void {\r\n    this.onTouchedFn();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Limpia la suscripción al destruir el componente\r\n    this.selectSubscription!.unsubscribe();\r\n  }\r\n\r\n}\r\n","<select \r\n  class=\"form-select\" \r\n  aria-label=\"Default select\" \r\n  [disabled]=\"isDisabled\"\r\n  [value]=\"value?.id\" \r\n  (change)=\"onChange($event)\">\r\n    <option *ngIf=\"empty\" value=\"-1\">{{ placeHolder | translate}}</option>\r\n    <option *ngFor=\"let item of items\" [value]=\"item.id\">{{ item.text }}</option>\r\n  </select>\r\n","import { AfterViewInit, Component } from '@angular/core';\r\nimport { JqueryService } from '../../service/jquery-service.service';\r\n\r\n@Component({\r\n  selector: 'lib-date',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './date.component.html',\r\n  styleUrl: './date.component.css'\r\n})\r\nexport class DateComponent implements AfterViewInit  {\r\n\r\n  private readonly $ = this.jqueryService.useJQuery();\r\n\r\n  constructor(private readonly jqueryService: JqueryService) { \r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.$( \"#datepicker\" ).datepicker();\r\n  }\r\n\r\n}\r\n","<input type=\"text\" id=\"datepicker\">\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-commons-lib',\r\n  standalone: true,\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      commons-lib works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class CommonsLibComponent {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class CommonLibModule { }\r\n","/*\r\n * Public API Surface of commons-lib\r\n */\r\n\r\nexport * from './lib/enum/commons.enum';\r\nexport * from './lib/models/notification.model';\r\nexport * from './lib/notification.service';\r\nexport * from './lib/commons-lib.service';\r\nexport * from './lib/components/browser/browser.component';\r\nexport * from './lib/components/select/select.component';\r\nexport * from './lib/components/date/date.component';\r\nexport * from './lib/commons-lib.component';\r\nexport * from './lib/commons-lib.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.JqueryService","VALUE_ACCESSOR"],"mappings":"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"}