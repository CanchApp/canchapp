{"version":3,"file":"351.js","mappings":"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","sources":["./projects/libs/auth-lib/src/lib/constants.ts","./projects/libs/auth-lib/src/lib/auth-lib.service.ts","./projects/libs/auth-lib/src/lib/auth-lib.component.ts","./projects/libs/auth-lib/src/lib/auth.interceptor.ts","./projects/libs/auth-lib/src/lib/auth-lib.module.ts","./projects/libs/auth-lib/src/public-api.ts","./projects/libs/auth-lib/src/auth-lib.ts"],"sourcesContent":["export const AUTH_TOKEN_KEY = 'TKCANCHAPP';\r\nexport const PRV_AUTH_TOKEN_KEY = 'PRV_TKCANCHAPP';\r\nexport const COMPANIES_KEY = 'COMPANIES';\r\nexport const ROLES_MODULES_KEY = 'ROLES_MODULES';","import { Injectable } from '@angular/core';\r\nimport { AUTH_TOKEN_KEY, PRV_AUTH_TOKEN_KEY, COMPANIES_KEY, ROLES_MODULES_KEY } from './constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthLibService {\r\n  constructor() {}\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(AUTH_TOKEN_KEY) ?? localStorage.getItem(PRV_AUTH_TOKEN_KEY)!;\r\n  };\r\n\r\n  public setToken(token: string, isProvisional: boolean): void {\r\n    if (isProvisional) {\r\n      this.removeToken();\r\n      localStorage.setItem(PRV_AUTH_TOKEN_KEY, token);\r\n    } else {\r\n      this.removePrvToken();\r\n      localStorage.setItem(AUTH_TOKEN_KEY, token);\r\n    }\r\n  }\r\n\r\n  public removeToken(): void {\r\n    localStorage.removeItem(AUTH_TOKEN_KEY);\r\n  }\r\n\r\n  public removePrvToken(): void {\r\n    localStorage.removeItem(PRV_AUTH_TOKEN_KEY);\r\n  }\r\n\r\n  public logOut(): void {\r\n    this.removeToken();\r\n    this.removePrvToken();\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    // Verifica si el token existe en localStorage\r\n    return !!localStorage.getItem(AUTH_TOKEN_KEY) && !localStorage.getItem(PRV_AUTH_TOKEN_KEY);\r\n  }\r\n\r\n  public isAuthenticatedMultilogin(): boolean {\r\n    // Verifica si el token provisional existe en localStorage\r\n    return !localStorage.getItem(AUTH_TOKEN_KEY) && !!localStorage.getItem(PRV_AUTH_TOKEN_KEY);\r\n  }\r\n\r\n  public getCompanies<T>(): T {\r\n    return JSON.parse(localStorage.getItem(COMPANIES_KEY)!) as T;\r\n  }\r\n\r\n  public setCompanies<T>(companies: T): void {\r\n    localStorage.setItem(COMPANIES_KEY, JSON.stringify(companies));\r\n  }\r\n\r\n  public getRoleModules<T>(): T {\r\n    return JSON.parse(localStorage.getItem(ROLES_MODULES_KEY)!) as T;\r\n  }\r\n\r\n  public setRoleModules<T>(rolesModules: T): void {\r\n    localStorage.setItem(ROLES_MODULES_KEY, JSON.stringify(rolesModules));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-auth-lib',\r\n  standalone: true,\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      auth-lib works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class AuthLibComponent {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthLibService } from './auth-lib.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private readonly authLibService: AuthLibService\r\n  ){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.authLibService.getToken();\r\n\r\n    let authReq = req;\r\n    if (token) {\r\n      authReq = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from './auth.interceptor';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AuthLibModule { }\r\n","/*\r\n * Public API Surface of auth-lib\r\n */\r\n\r\nexport * from './lib/auth-lib.service';\r\nexport * from './lib/auth-lib.component';\r\nexport * from './lib/auth-lib.module';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AUTH_TOKEN_KEY","PRV_AUTH_TOKEN_KEY","COMPANIES_KEY","ROLES_MODULES_KEY","AuthLibService","constructor","getToken","localStorage","getItem","setToken","token","isProvisional","removeToken","setItem","removePrvToken","removeItem","logOut","isAuthenticated","isAuthenticatedMultilogin","getCompanies","JSON","parse","setCompanies","companies","stringify","getRoleModules","setRoleModules","rolesModules","ɵprov","factory","ɵfac","providedIn","AuthLibComponent","ɵcmp","selectors","standalone","features","AuthInterceptor","authLibService","intercept","req","next","authReq","clone","setHeaders","Authorization","handle","AuthLibModule","ɵinj","provide","HTTP_INTERCEPTORS","useClass","multi"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}