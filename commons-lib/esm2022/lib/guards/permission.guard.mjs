import { inject } from "@angular/core";
import { Router } from '@angular/router';
import { PermissionLibService } from "../service/permission.service";
export const permissionGuard = (route, state) => {
    const router = inject(Router);
    const service = inject(PermissionLibService);
    try {
        const parentModule = route.data['parentModule'];
        const componentAction = route.data['parentModuleAction'];
        if (!parentModule || !componentAction) {
            return false;
        }
        console.log('parentModule', parentModule);
        console.log('componentAction', componentAction);
        if (service.hasPermissionToComponent(parentModule, componentAction)) {
            return true;
        }
        else {
            router.navigate(['/unauthorized']);
            return false;
        }
    }
    catch (error) {
        console.error(error);
        router.navigate(['/unauthorized']);
        return false;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi5ndWFyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYnMvY29tbW9ucy1saWIvc3JjL2xpYi9ndWFyZHMvcGVybWlzc2lvbi5ndWFyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sRUFBaUIsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFeEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFckUsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFrQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRTtJQUMzRCxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFFN0MsSUFBSTtRQUNBLE1BQU0sWUFBWSxHQUFnQixLQUFLLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzdELE1BQU0sZUFBZSxHQUFzQixLQUFLLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFFNUUsSUFBRyxDQUFDLFlBQVksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUNsQyxPQUFPLEtBQUssQ0FBQztTQUNoQjtRQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFFaEQsSUFBRyxPQUFPLENBQUMsd0JBQXdCLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxFQUFFO1lBQ2hFLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7YUFBTTtZQUNILE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBQ25DLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO0tBQ0o7SUFDRCxPQUFPLEtBQUssRUFBRTtRQUNWLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7UUFDbkMsT0FBTyxLQUFLLENBQUM7S0FDaEI7QUFDTCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmplY3QgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBDYW5BY3RpdmF0ZUZuLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBNb2R1bGVBY3Rpb25zRW51bSwgTW9kdWxlc0VudW0gfSBmcm9tIFwiLi4vZW51bS9tb2R1bGVzLXJvbGVzLmVudW1cIjtcclxuaW1wb3J0IHsgUGVybWlzc2lvbkxpYlNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZS9wZXJtaXNzaW9uLnNlcnZpY2VcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBwZXJtaXNzaW9uR3VhcmQ6IENhbkFjdGl2YXRlRm4gPSAocm91dGUsIHN0YXRlKSA9PiB7XHJcbiAgICBjb25zdCByb3V0ZXIgPSBpbmplY3QoUm91dGVyKTtcclxuICAgIGNvbnN0IHNlcnZpY2UgPSBpbmplY3QoUGVybWlzc2lvbkxpYlNlcnZpY2UpO1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcGFyZW50TW9kdWxlOiBNb2R1bGVzRW51bSA9IHJvdXRlLmRhdGFbJ3BhcmVudE1vZHVsZSddO1xyXG4gICAgICAgIGNvbnN0IGNvbXBvbmVudEFjdGlvbjogTW9kdWxlQWN0aW9uc0VudW0gPSByb3V0ZS5kYXRhWydwYXJlbnRNb2R1bGVBY3Rpb24nXTtcclxuXHJcbiAgICAgICAgaWYoIXBhcmVudE1vZHVsZSB8fCAhY29tcG9uZW50QWN0aW9uKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdwYXJlbnRNb2R1bGUnLCBwYXJlbnRNb2R1bGUpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjb21wb25lbnRBY3Rpb24nLCBjb21wb25lbnRBY3Rpb24pO1xyXG5cclxuICAgICAgICBpZihzZXJ2aWNlLmhhc1Blcm1pc3Npb25Ub0NvbXBvbmVudChwYXJlbnRNb2R1bGUsIGNvbXBvbmVudEFjdGlvbikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcm91dGVyLm5hdmlnYXRlKFsnL3VuYXV0aG9yaXplZCddKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgICAgIHJvdXRlci5uYXZpZ2F0ZShbJy91bmF1dGhvcml6ZWQnXSk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfSAgICBcclxufSJdfQ==