import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { CommonModule } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ConfirmModalComponent {
    constructor() {
        this.confirmButtonClick = new EventEmitter();
        this.cancelButtonClick = new EventEmitter();
        this.recordId = 0; // Id para identificar la fila cliqueada
    }
    ngAfterViewInit() {
        this.confirmModal = new bootstrap.Modal(this.modalDelete.nativeElement);
    }
    onClickConfirmButton() {
        this.confirmButtonClick.emit(this.recordId);
    }
    onClickCancelButton() {
        this.cancelButtonClick.emit(this.recordId);
    }
    openModal(recordId) {
        this.recordId = recordId;
        this.confirmModal.show();
    }
    closeModal() {
        this.recordId = 0;
        this.confirmModal.hide();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: ConfirmModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: ConfirmModalComponent, isStandalone: true, selector: "lib-confirm-modal", inputs: { data: "data" }, outputs: { confirmButtonClick: "confirmButtonClick", cancelButtonClick: "cancelButtonClick" }, viewQueries: [{ propertyName: "modalDelete", first: true, predicate: ["confirmModal"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"modal\" tabindex=\"-1\" #confirmModal>\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">{{ data.title }}</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onClickCancelButton()\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>{{ data.body }} <strong *ngIf=\"data.boldBody != ''\">{{ data.boldBody }}</strong>? </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-success\" data-bs-dismiss=\"modal\" (click)=\"onClickConfirmButton()\">{{ data.confirmLabel }}</button> \r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\" (click)=\"onClickCancelButton()\">{{ data.cancelLabel }}</button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: ConfirmModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-confirm-modal', standalone: true, imports: [CommonModule], template: "<div class=\"modal\" tabindex=\"-1\" #confirmModal>\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">{{ data.title }}</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onClickCancelButton()\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>{{ data.body }} <strong *ngIf=\"data.boldBody != ''\">{{ data.boldBody }}</strong>? </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-success\" data-bs-dismiss=\"modal\" (click)=\"onClickConfirmButton()\">{{ data.confirmLabel }}</button> \r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\" (click)=\"onClickCancelButton()\">{{ data.cancelLabel }}</button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n" }]
        }], propDecorators: { modalDelete: [{
                type: ViewChild,
                args: ['confirmModal', { static: true }]
            }], data: [{
                type: Input
            }], confirmButtonClick: [{
                type: Output
            }], cancelButtonClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9saWJzL2NvbW1vbnMtbGliL3NyYy9saWIvY29tcG9uZW50cy9jb25maXJtLW1vZGFsL2NvbmZpcm0tbW9kYWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGlicy9jb21tb25zLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvY29uZmlybS1tb2RhbC9jb25maXJtLW1vZGFsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQWMsU0FBUyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM3RyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7OztBQVkvQyxNQUFNLE9BQU8scUJBQXFCO0lBUGxDO1FBYWMsdUJBQWtCLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUNoRCxzQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBRXpELGFBQVEsR0FBVyxDQUFDLENBQUMsQ0FBQyx3Q0FBd0M7S0F1QmpFO0lBckJHLGVBQWU7UUFDWCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxvQkFBb0I7UUFDaEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELG1CQUFtQjtRQUNmLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxTQUFTLENBQUMsUUFBZ0I7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRUQsVUFBVTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDN0IsQ0FBQzsrR0EvQlEscUJBQXFCO21HQUFyQixxQkFBcUIsaVVDYmxDLG0rQkFpQkEseUREUlksWUFBWTs7NEZBSVgscUJBQXFCO2tCQVBqQyxTQUFTOytCQUNFLG1CQUFtQixjQUNqQixJQUFJLFdBQ1AsQ0FBQyxZQUFZLENBQUM7OEJBS3VCLFdBQVc7c0JBQXRELFNBQVM7dUJBQUMsY0FBYyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBQztnQkFHakMsSUFBSTtzQkFBWixLQUFLO2dCQUVJLGtCQUFrQjtzQkFBM0IsTUFBTTtnQkFDRyxpQkFBaUI7c0JBQTFCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgVmlld0NoaWxkLCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IENvbmZpcm1Nb2RhbE1vZGVsIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2NvbmZpcm0tbW9kYWwubW9kZWwnO1xyXG5cclxuZGVjbGFyZSBsZXQgYm9vdHN0cmFwOiBhbnk7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2xpYi1jb25maXJtLW1vZGFsJyxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maXJtLW1vZGFsLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybDogJy4vY29uZmlybS1tb2RhbC5jb21wb25lbnQuY3NzJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbmZpcm1Nb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gICAgQFZpZXdDaGlsZCgnY29uZmlybU1vZGFsJywgeyBzdGF0aWM6IHRydWV9KSBtb2RhbERlbGV0ZSE6IEVsZW1lbnRSZWY7XHJcbiAgICBjb25maXJtTW9kYWw6IGFueTtcclxuXHJcbiAgICBASW5wdXQoKSBkYXRhITogQ29uZmlybU1vZGFsTW9kZWw7XHJcblxyXG4gICAgQE91dHB1dCgpIGNvbmZpcm1CdXR0b25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xyXG4gICAgQE91dHB1dCgpIGNhbmNlbEJ1dHRvbkNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XHJcblxyXG4gICAgcmVjb3JkSWQ6IG51bWJlciA9IDA7IC8vIElkIHBhcmEgaWRlbnRpZmljYXIgbGEgZmlsYSBjbGlxdWVhZGFcclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jb25maXJtTW9kYWwgPSBuZXcgYm9vdHN0cmFwLk1vZGFsKHRoaXMubW9kYWxEZWxldGUubmF0aXZlRWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja0NvbmZpcm1CdXR0b24oKSB7XHJcbiAgICAgICAgdGhpcy5jb25maXJtQnV0dG9uQ2xpY2suZW1pdCh0aGlzLnJlY29yZElkKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsaWNrQ2FuY2VsQnV0dG9uKCkge1xyXG4gICAgICAgIHRoaXMuY2FuY2VsQnV0dG9uQ2xpY2suZW1pdCh0aGlzLnJlY29yZElkKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuTW9kYWwocmVjb3JkSWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucmVjb3JkSWQgPSByZWNvcmRJZDtcclxuICAgICAgICB0aGlzLmNvbmZpcm1Nb2RhbC5zaG93KCk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VNb2RhbCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnJlY29yZElkID0gMDtcclxuICAgICAgICB0aGlzLmNvbmZpcm1Nb2RhbC5oaWRlKCk7XHJcbiAgICB9XHJcbn0iLCI8ZGl2IGNsYXNzPVwibW9kYWxcIiB0YWJpbmRleD1cIi0xXCIgI2NvbmZpcm1Nb2RhbD5cclxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2dcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgPGg1IGNsYXNzPVwibW9kYWwtdGl0bGVcIj57eyBkYXRhLnRpdGxlIH19PC9oNT5cclxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4tY2xvc2VcIiBkYXRhLWJzLWRpc21pc3M9XCJtb2RhbFwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiIChjbGljayk9XCJvbkNsaWNrQ2FuY2VsQnV0dG9uKClcIj48L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiPlxyXG4gICAgICAgICAgICA8cD57eyBkYXRhLmJvZHkgfX0gPHN0cm9uZyAqbmdJZj1cImRhdGEuYm9sZEJvZHkgIT0gJydcIj57eyBkYXRhLmJvbGRCb2R5IH19PC9zdHJvbmc+PyA8L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWZvb3RlclwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tc3VjY2Vzc1wiIGRhdGEtYnMtZGlzbWlzcz1cIm1vZGFsXCIgKGNsaWNrKT1cIm9uQ2xpY2tDb25maXJtQnV0dG9uKClcIj57eyBkYXRhLmNvbmZpcm1MYWJlbCB9fTwvYnV0dG9uPiBcclxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLW91dGxpbmUtc2Vjb25kYXJ5XCIgZGF0YS1icy1kaXNtaXNzPVwibW9kYWxcIiAoY2xpY2spPVwib25DbGlja0NhbmNlbEJ1dHRvbigpXCI+e3sgZGF0YS5jYW5jZWxMYWJlbCB9fTwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG4iXX0=